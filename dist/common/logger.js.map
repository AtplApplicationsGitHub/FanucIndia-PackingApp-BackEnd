{"version":3,"sources":["../../src/common/logger.ts"],"sourcesContent":["import pino from 'pino'\r\n\r\nclass FailureSampler {\r\n  private buckets = new Map<string, { count: number; resetAt: number }>()\r\n  private readonly windowMs = 60_000\r\n  private readonly sampleRate: number\r\n\r\n  constructor(sampleRate = 10) {\r\n    this.sampleRate = sampleRate\r\n  }\r\n\r\n  shouldLog(ip: string, code: string): boolean {\r\n    const key = `${ip}:${code}`\r\n    const now = Date.now()\r\n    let entry = this.buckets.get(key)\r\n\r\n    if (!entry || now >= entry.resetAt) {\r\n      entry = { count: 0, resetAt: now + this.windowMs }\r\n      this.buckets.set(key, entry)\r\n    }\r\n\r\n    entry.count += 1\r\n    return entry.count === 1 || entry.count % this.sampleRate === 0\r\n  }\r\n}\r\n\r\nconst sampler = new FailureSampler(10)\r\n\r\nexport const logger = pino({\r\n  level: process.env.LOG_LEVEL || 'info',\r\n  base: {\r\n    pid: false,\r\n    hostname: false,\r\n  },\r\n  timestamp: pino.stdTimeFunctions.isoTime,\r\n  serializers: {\r\n    req: (req) => ({\r\n      method: req.method,\r\n      url: req.url,\r\n      id: req.id,          \r\n      ip: req.ip,\r\n    })\r\n  }\r\n})\r\n\r\nexport function logAuthFailure({\r\n  code,\r\n  message,\r\n  ip,\r\n  userId,\r\n  requestId,\r\n}: {\r\n  code: string\r\n  message: string\r\n  ip: string\r\n  userId?: string\r\n  requestId?: string\r\n}) {\r\n  if (!sampler.shouldLog(ip, code)) {\r\n    return\r\n  }\r\n  logger.warn(\r\n    {\r\n      component: 'auth',\r\n      code,\r\n      ip,\r\n      userId,\r\n      requestId,\r\n    },\r\n    message\r\n  )\r\n}\r\n"],"names":["logAuthFailure","logger","FailureSampler","shouldLog","ip","code","key","now","Date","entry","buckets","get","resetAt","count","windowMs","set","sampleRate","Map","sampler","pino","level","process","env","LOG_LEVEL","base","pid","hostname","timestamp","stdTimeFunctions","isoTime","serializers","req","method","url","id","message","userId","requestId","warn","component"],"mappings":";;;;;;;;;;;QA6CgBA;eAAAA;;QAjBHC;eAAAA;;;6DA5BI;;;;;;AAEjB,IAAA,AAAMC,iBAAN,MAAMA;IASJC,UAAUC,EAAU,EAAEC,IAAY,EAAW;QAC3C,MAAMC,MAAM,GAAGF,GAAG,CAAC,EAAEC,MAAM;QAC3B,MAAME,MAAMC,KAAKD,GAAG;QACpB,IAAIE,QAAQ,IAAI,CAACC,OAAO,CAACC,GAAG,CAACL;QAE7B,IAAI,CAACG,SAASF,OAAOE,MAAMG,OAAO,EAAE;YAClCH,QAAQ;gBAAEI,OAAO;gBAAGD,SAASL,MAAM,IAAI,CAACO,QAAQ;YAAC;YACjD,IAAI,CAACJ,OAAO,CAACK,GAAG,CAACT,KAAKG;QACxB;QAEAA,MAAMI,KAAK,IAAI;QACf,OAAOJ,MAAMI,KAAK,KAAK,KAAKJ,MAAMI,KAAK,GAAG,IAAI,CAACG,UAAU,KAAK;IAChE;IAhBA,YAAYA,aAAa,EAAE,CAAE;aAJrBN,UAAU,IAAIO;aACLH,WAAW;QAI1B,IAAI,CAACE,UAAU,GAAGA;IACpB;AAeF;AAEA,MAAME,UAAU,IAAIhB,eAAe;AAE5B,MAAMD,SAASkB,IAAAA,aAAI,EAAC;IACzBC,OAAOC,QAAQC,GAAG,CAACC,SAAS,IAAI;IAChCC,MAAM;QACJC,KAAK;QACLC,UAAU;IACZ;IACAC,WAAWR,aAAI,CAACS,gBAAgB,CAACC,OAAO;IACxCC,aAAa;QACXC,KAAK,CAACA,MAAS,CAAA;gBACbC,QAAQD,IAAIC,MAAM;gBAClBC,KAAKF,IAAIE,GAAG;gBACZC,IAAIH,IAAIG,EAAE;gBACV9B,IAAI2B,IAAI3B,EAAE;YACZ,CAAA;IACF;AACF;AAEO,SAASJ,eAAe,EAC7BK,IAAI,EACJ8B,OAAO,EACP/B,EAAE,EACFgC,MAAM,EACNC,SAAS,EAOV;IACC,IAAI,CAACnB,QAAQf,SAAS,CAACC,IAAIC,OAAO;QAChC;IACF;IACAJ,OAAOqC,IAAI,CACT;QACEC,WAAW;QACXlC;QACAD;QACAgC;QACAC;IACF,GACAF;AAEJ"}