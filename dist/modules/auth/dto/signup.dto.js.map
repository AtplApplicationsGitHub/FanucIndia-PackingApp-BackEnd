{"version":3,"sources":["../../../../src/modules/auth/dto/signup.dto.ts"],"sourcesContent":["import {\r\n  IsEmail,\r\n  IsString,\r\n  MinLength,\r\n  IsIn,\r\n  ValidateIf,\r\n  Matches,\r\n} from 'class-validator';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\n\r\nexport class SignupDto {\r\n  @ApiProperty({ example: 'John Doe', description: 'Full name of the user' })\r\n  @IsString()\r\n  name: string;\r\n\r\n  @ApiProperty({ example: 'test@mail.com', description: 'User email address' })\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  @ApiProperty({\r\n    example: 'password123',\r\n    description: 'Password (min 8 chars for Admin/Sales, 4-digit PIN for User)',\r\n  })\r\n  @IsString()\r\n  // Only apply the MinLength validator if the role is NOT 'USER'\r\n  @ValidateIf((o) => o.role !== 'USER')\r\n  @MinLength(8, { message: 'Password must be at least 8 characters long' })\r\n  // Only apply the Matches validator if the role IS 'USER'\r\n  @ValidateIf((o) => o.role === 'USER')\r\n  @Matches(/^\\d{4}$/, {\r\n    message: 'Password must be a 4-digit PIN for the USER role',\r\n  })\r\n  password: string;\r\n\r\n  @ApiProperty({\r\n    example: 'SALES',\r\n    description: 'User role (SALES, ADMIN or USER)',\r\n    enum: ['SALES', 'ADMIN', 'USER'],\r\n  })\r\n  @IsString()\r\n  @IsIn(['SALES', 'ADMIN', 'USER'], {\r\n    message: 'Role must be either SALES, ADMIN, or USER',\r\n  })\r\n  role: string;\r\n}"],"names":["SignupDto","example","description","o","role","message","enum"],"mappings":";;;;+BAUaA;;;eAAAA;;;gCAHN;yBACqB;;;;;;;;;;AAErB,IAAA,AAAMA,YAAN,MAAMA;AAkCb;;;QAjCiBC,SAAS;QAAYC,aAAa;;;;;;;QAIlCD,SAAS;QAAiBC,aAAa;;;;;;;QAKpDD,SAAS;QACTC,aAAa;;;qCAIFC,IAAMA,EAAEC,IAAI,KAAK;;QACdC,SAAS;;qCAEZF,IAAMA,EAAEC,IAAI,KAAK;;QAE5BC,SAAS;;;;;;QAKTJ,SAAS;QACTC,aAAa;QACbI,MAAM;YAAC;YAAS;YAAS;SAAO;;;;QAG3B;QAAS;QAAS;;QACvBD,SAAS"}