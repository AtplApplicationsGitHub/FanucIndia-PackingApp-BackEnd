{"version":3,"sources":["../../../src/modules/auth/jwt.strategy.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { JwtPayload } from './types/jwt-payload.type'; \r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(config: ConfigService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: config.get<string>('JWT_SECRET'),\r\n    });\r\n  }\r\n\r\n  async validate(payload: JwtPayload) {\r\n    return {\r\n      userId: payload.sub,\r\n      email: payload.email,\r\n      role: payload.role,\r\n      name: payload.name,\r\n    };\r\n  }\r\n}\r\n"],"names":["JwtStrategy","PassportStrategy","Strategy","validate","payload","userId","sub","email","role","name","config","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","get"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPc;0BACM;6BACI;wBACP;;;;;;;;;;AAIvB,IAAA,AAAMA,cAAN,MAAMA,oBAAoBC,IAAAA,0BAAgB,EAACC,qBAAQ;IAQxD,MAAMC,SAASC,OAAmB,EAAE;QAClC,OAAO;YACLC,QAAQD,QAAQE,GAAG;YACnBC,OAAOH,QAAQG,KAAK;YACpBC,MAAMJ,QAAQI,IAAI;YAClBC,MAAML,QAAQK,IAAI;QACpB;IACF;IAdA,YAAYC,MAAqB,CAAE;QACjC,KAAK,CAAC;YACJC,gBAAgBC,uBAAU,CAACC,2BAA2B;YACtDC,aAAaJ,OAAOK,GAAG,CAAS;QAClC;IACF;AAUF"}