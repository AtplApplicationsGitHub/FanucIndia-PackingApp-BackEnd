{"version":3,"sources":["../../../src/modules/admin-order/admin-order.controller.ts"],"sourcesContent":["import {\r\n  Controller,\r\n  Get,\r\n  Patch,\r\n  Param,\r\n  Body,\r\n  Query,\r\n  UseGuards,\r\n  ParseIntPipe,\r\n  Req,\r\n} from '@nestjs/common';\r\nimport { AdminOrderService } from './admin-order.service';\r\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\r\nimport { Roles } from '../auth/roles.decorator';\r\nimport { UpdateAdminOrderDto } from './dto/update-admin-order.dto';\r\nimport {\r\n  ApiTags,\r\n  ApiBearerAuth,\r\n  ApiOperation,\r\n  ApiResponse,\r\n  ApiBody,\r\n  ApiParam,\r\n  ApiQuery,\r\n} from '@nestjs/swagger';\r\nimport { Delete } from '@nestjs/common';\r\nimport { AuthRequest } from '../auth/types/auth-request.type';\r\n\r\n@ApiTags('Admin Orders')\r\n@ApiBearerAuth()\r\n@UseGuards(JwtAuthGuard)\r\n@Controller('admin/sales-orders')\r\nexport class AdminOrderController {\r\n  constructor(private readonly service: AdminOrderService) {}\r\n\r\n  @Get()\r\n  @Roles('ADMIN')\r\n  @ApiOperation({ summary: 'Get all sales orders (admin only)' })\r\n  @ApiQuery({\r\n    name: 'status',\r\n    required: false,\r\n    type: String,\r\n    description: 'Filter by status',\r\n  })\r\n  @ApiQuery({\r\n    name: 'product',\r\n    required: false,\r\n    type: String,\r\n    description: 'Filter by product ID or name',\r\n  })\r\n  @ApiQuery({\r\n    name: 'date',\r\n    required: false,\r\n    type: String,\r\n    description: 'Filter by delivery date (YYYY-MM-DD)',\r\n  })\r\n  @ApiQuery({\r\n    name: 'page',\r\n    required: false,\r\n    type: Number,\r\n    description: 'Page number for pagination',\r\n  })\r\n  @ApiQuery({\r\n    name: 'limit',\r\n    required: false,\r\n    type: Number,\r\n    description: 'Results per page',\r\n  })\r\n  @ApiResponse({\r\n    status: 200,\r\n    description: 'List of sales orders returned successfully',\r\n  })\r\n  findAll(@Query() query: any) {\r\n    return this.service.findAll(query);\r\n  }\r\n\r\n  @Patch(':id')\r\n  @Roles('ADMIN','USER')\r\n  @ApiOperation({ summary: 'Update a specific sales order (admin and user roles)' })\r\n  @ApiParam({\r\n    name: 'id',\r\n    type: Number,\r\n    description: 'ID of the sales order to update',\r\n  })\r\n  @ApiBody({ type: UpdateAdminOrderDto })\r\n  @ApiResponse({ status: 200, description: 'Sales order updated successfully' })\r\n  @ApiResponse({ status: 404, description: 'Sales order not found' })\r\n  update(\r\n    @Param('id', ParseIntPipe) id: number,\r\n    @Body() dto: UpdateAdminOrderDto,\r\n    @Req() req: AuthRequest,\r\n  ) {\r\n    return this.service.update(id, dto, req.user);\r\n  }\r\n\r\n  @Delete(':id')\r\n  @Roles('ADMIN')\r\n  @ApiOperation({ summary: 'Delete a specific sales order (admin only)' })\r\n  @ApiParam({\r\n    name: 'id',\r\n    type: Number,\r\n    description: 'ID of the sales order to delete',\r\n  })\r\n  @ApiResponse({ status: 200, description: 'Sales order deleted successfully' })\r\n  @ApiResponse({ status: 404, description: 'Sales order not found' })\r\n  async remove(@Param('id', ParseIntPipe) id: number) {\r\n    return this.service.remove(id);\r\n  }\r\n}\r\n"],"names":["AdminOrderController","findAll","query","service","update","id","dto","req","user","remove","summary","name","required","type","String","description","Number","status","UpdateAdminOrderDto"],"mappings":";;;;+BA+BaA;;;eAAAA;;;wBArBN;mCAC2B;8BACL;gCACP;qCACc;yBAS7B;iCAEqB;;;;;;;;;;;;;;;AAMrB,IAAA,AAAMA,uBAAN,MAAMA;IAwCXC,QAAQ,AAASC,KAAU,EAAE;QAC3B,OAAO,IAAI,CAACC,OAAO,CAACF,OAAO,CAACC;IAC9B;IAaAE,OACE,AAA2BC,EAAU,EACrC,AAAQC,GAAwB,EAChC,AAAOC,GAAgB,EACvB;QACA,OAAO,IAAI,CAACJ,OAAO,CAACC,MAAM,CAACC,IAAIC,KAAKC,IAAIC,IAAI;IAC9C;IAEA,MAUMC,OAAO,AAA2BJ,EAAU,EAAE;QAClD,OAAO,IAAI,CAACF,OAAO,CAACM,MAAM,CAACJ;IAC7B;IA1EA,YAAY,AAAiBF,OAA0B,CAAE;aAA5BA,UAAAA;IAA6B;AA2E5D;;;;;QAvEkBO,SAAS;;;QAEvBC,MAAM;QACNC,UAAU;QACVC,MAAMC;QACNC,aAAa;;;QAGbJ,MAAM;QACNC,UAAU;QACVC,MAAMC;QACNC,aAAa;;;QAGbJ,MAAM;QACNC,UAAU;QACVC,MAAMC;QACNC,aAAa;;;QAGbJ,MAAM;QACNC,UAAU;QACVC,MAAMG;QACND,aAAa;;;QAGbJ,MAAM;QACNC,UAAU;QACVC,MAAMG;QACND,aAAa;;;QAGbE,QAAQ;QACRF,aAAa;;;;;;;;;;;;;QAQCL,SAAS;;;QAEvBC,MAAM;QACNE,MAAMG;QACND,aAAa;;;QAEJF,MAAMK,wCAAmB;;;QACrBD,QAAQ;QAAKF,aAAa;;;QAC1BE,QAAQ;QAAKF,aAAa;;;;;;;;;;;;;;;;;QAWzBL,SAAS;;;QAEvBC,MAAM;QACNE,MAAMG;QACND,aAAa;;;QAEAE,QAAQ;QAAKF,aAAa;;;QAC1BE,QAAQ;QAAKF,aAAa"}