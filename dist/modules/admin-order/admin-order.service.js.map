{"version":3,"sources":["../../../src/modules/admin-order/admin-order.service.ts"],"sourcesContent":["import {\r\n  Injectable,\r\n  NotFoundException,\r\n  BadRequestException,\r\n  ForbiddenException,\r\n} from '@nestjs/common';\r\nimport { PrismaService } from '../../prisma.service';\r\nimport { UpdateAdminOrderDto } from './dto/update-admin-order.dto';\r\nimport { Prisma } from '@prisma/client';\r\n\r\n@Injectable()\r\nexport class AdminOrderService {\r\n  constructor(private prisma: PrismaService) {}\r\n\r\n  async findAll(query: any) {\r\n    const {\r\n      page = 1,\r\n      limit = 20,\r\n      search,\r\n      date,\r\n      sortBy = 'createdAt',\r\n      sortOrder = 'desc',\r\n      startDate,\r\n      endDate,\r\n    } = query;\r\n\r\n    const parsedPage = Number(page) > 0 ? Number(page) : 1;\r\n    const parsedLimit =\r\n      Number(limit) > 0 && Number(limit) <= 100 ? Number(limit) : 20;\r\n\r\n    const allowedSortFields = [\r\n      'createdAt',\r\n      'priority',\r\n      'status',\r\n      'deliveryDate',\r\n    ];\r\n    const allowedSortOrders = ['asc', 'desc'];\r\n    const sortField = allowedSortFields.includes(sortBy) ? sortBy : 'createdAt';\r\n    const orderDirection = allowedSortOrders.includes(sortOrder)\r\n      ? sortOrder\r\n      : 'desc';\r\n\r\n    const where: Prisma.SalesOrderWhereInput = {};\r\n\r\n    const parseYMDLocal = (s: string) => {\r\n      const [y, m, d] = s.split('-').map(Number);\r\n      return new Date(y, m - 1, d); \r\n    };\r\n\r\n    if (startDate || endDate) {\r\n      const range: { gte?: Date; lt?: Date } = {};\r\n\r\n      if (startDate) {\r\n        const s = parseYMDLocal(startDate);\r\n        s.setHours(0, 0, 0, 0); \r\n        range.gte = s;\r\n      }\r\n\r\n      if (endDate) {\r\n        const e = parseYMDLocal(endDate);\r\n        const next = new Date(\r\n          e.getFullYear(),\r\n          e.getMonth(),\r\n          e.getDate() + 1,\r\n          0,\r\n          0,\r\n          0,\r\n          0,\r\n        );\r\n        range.lt = next;\r\n      }\r\n\r\n      where.deliveryDate = { ...(where.deliveryDate as object), ...range };\r\n    }\r\n\r\n    if (search) {\r\n      const lower = search.toLowerCase();\r\n      const num = Number(search);\r\n\r\n      where.OR = [\r\n        { user: { is: { name: { contains: search, mode: 'insensitive' } } } },\r\n        { product: { is: { name: { contains: search, mode: 'insensitive' } } } },\r\n        { transporter: { is: { name: { contains: search, mode: 'insensitive' } } } },\r\n        { plantCode: { is: { code: { contains: search, mode: 'insensitive' } } } },\r\n        { salesZone: { is: { name: { contains: search, mode: 'insensitive' } } } },\r\n        { packConfig: { is: { configName: { contains: search, mode: 'insensitive' } } } },\r\n        { assignedUser: { is: { name: { contains: search, mode: 'insensitive' } } } },\r\n\r\n        { saleOrderNumber: { contains: search, mode: 'insensitive' } },\r\n        { outboundDelivery: { contains: search, mode: 'insensitive' } },\r\n        { transferOrder: { contains: search, mode: 'insensitive' } },\r\n        { status: { contains: search, mode: 'insensitive' } },\r\n        { specialRemarks: { contains: search, mode: 'insensitive' } },\r\n\r\n        ...(lower === 'yes' || lower === 'no'\r\n          ? [{ paymentClearance: { equals: lower === 'yes' } }]\r\n          : []),\r\n        ...(!isNaN(num) ? [{ priority: { equals: num } }] : []),\r\n      ];\r\n    }\r\n\r\n    if (date) {\r\n      const [y, m, d] = date.split('-').map(Number);\r\n\r\n      const startUtc = new Date(\r\n        Date.UTC(y, m - 1, d, 0, 0, 0) - 5.5 * 60 * 60 * 1000,\r\n      );\r\n      const endUtc = new Date(\r\n        Date.UTC(y, m - 1, d, 23, 59, 59, 999) - 5.5 * 60 * 60 * 1000,\r\n      );\r\n      where.deliveryDate = { gte: startUtc, lte: endUtc };\r\n    }\r\n\r\n    try {\r\n      const total = await this.prisma.salesOrder.count({ where });\r\n      if (total === 0) {\r\n        return { total: 0, page: 1, limit: 0, data: [] };\r\n      }\r\n\r\n      const isFilterActive = !!search || !!startDate || !!endDate;\r\n      const skip = isFilterActive ? 0 : (parsedPage - 1) * parsedLimit;\r\n      const take = isFilterActive ? total : parsedLimit;\r\n\r\n      const data = await this.prisma.salesOrder.findMany({\r\n        where,\r\n        orderBy: { [sortField]: orderDirection },\r\n        skip,\r\n        take,\r\n        include: {\r\n          user: { select: { id: true, name: true, email: true } },\r\n          product: { select: { id: true, name: true, code: true } },\r\n          transporter: { select: { id: true, name: true } },\r\n          plantCode: { select: { id: true, code: true, description: true } },\r\n          salesZone: { select: { id: true, name: true } },\r\n          packConfig: { select: { id: true, configName: true } },\r\n          assignedUser: { select: { id: true, name: true } },\r\n          _count: {\r\n            select: { materialData: true },\r\n          },\r\n        },\r\n      });\r\n\r\n      return {\r\n        total,\r\n        page: isFilterActive ? 1 : parsedPage,\r\n        limit: isFilterActive ? total : parsedLimit,\r\n        data: data.map(({ _count, ...order }) => ({\r\n          ...order,\r\n          hasMaterialData: _count.materialData > 0,\r\n        })),\r\n      };\r\n    } catch (err) {\r\n      if (err instanceof Prisma.PrismaClientValidationError) {\r\n        throw new BadRequestException(err.message);\r\n      }\r\n      throw new BadRequestException('Failed to fetch sales orders.');\r\n    }\r\n  }\r\n\r\n  async update(id: number, dto: UpdateAdminOrderDto, user: { userId: number; role: string }) {\r\n    const order = await this.prisma.salesOrder.findUnique({ where: { id } });\r\n    if (!order) {\r\n      throw new NotFoundException('Order not found');\r\n    }\r\n\r\n    if (user.role === 'USER' && order.assignedUserId !== user.userId) {\r\n      throw new ForbiddenException('You can only update orders assigned to you.');\r\n    }\r\n\r\n    if (user.role === 'USER') {\r\n        if (Object.keys(dto).length > 1 || !('fgLocation' in dto) ) {\r\n            throw new ForbiddenException('You are only allowed to update the FG Location.');\r\n        }\r\n    }\r\n\r\n    return this.prisma.salesOrder.update({ where: { id }, data: dto });\r\n  }\r\n\r\n  async remove(id: number) {\r\n    const order = await this.prisma.salesOrder.findUnique({\r\n      where: { id },\r\n      include: {\r\n        _count: {\r\n          select: { materialData: true },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!order) {\r\n      throw new NotFoundException('Sales order not found');\r\n    }\r\n\r\n    if (order._count.materialData > 0) {\r\n      throw new BadRequestException('Cannot delete an order that has material data imported.');\r\n    }\r\n\r\n    await this.prisma.salesOrder.delete({ where: { id } });\r\n    return { message: 'Sales order deleted successfully' };\r\n  }\r\n}"],"names":["AdminOrderService","findAll","query","page","limit","search","date","sortBy","sortOrder","startDate","endDate","parsedPage","Number","parsedLimit","allowedSortFields","allowedSortOrders","sortField","includes","orderDirection","where","parseYMDLocal","s","y","m","d","split","map","Date","range","setHours","gte","e","next","getFullYear","getMonth","getDate","lt","deliveryDate","lower","toLowerCase","num","OR","user","is","name","contains","mode","product","transporter","plantCode","code","salesZone","packConfig","configName","assignedUser","saleOrderNumber","outboundDelivery","transferOrder","status","specialRemarks","paymentClearance","equals","isNaN","priority","startUtc","UTC","endUtc","lte","total","prisma","salesOrder","count","data","isFilterActive","skip","take","findMany","orderBy","include","select","id","email","description","_count","materialData","order","hasMaterialData","err","Prisma","PrismaClientValidationError","BadRequestException","message","update","dto","findUnique","NotFoundException","role","assignedUserId","userId","ForbiddenException","Object","keys","length","remove","delete"],"mappings":"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"}