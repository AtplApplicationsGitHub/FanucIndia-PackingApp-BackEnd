{"version":3,"sources":["../../../src/modules/fg-dashboard/fg-dashboard.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\r\nimport { PrismaService } from '../../prisma.service';\r\nimport { Prisma } from '@prisma/client';\r\n\r\n@Injectable()\r\nexport class FgDashboardService {\r\n  constructor(private readonly prisma: PrismaService) {}\r\n\r\n  async getFgDashboardData(user: { userId: number; role: string }, query: { search?: string, date?: string }) {\r\n    const { search, date } = query;\r\n    const where: Prisma.SalesOrderWhereInput = {};\r\n\r\n    if (user.role === 'USER') {\r\n      where.assignedUserId = user.userId;\r\n    }\r\n\r\n    if (date) {\r\n      const startOfDay = new Date(date);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(date);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n      where.deliveryDate = {\r\n        gte: startOfDay,\r\n        lte: endOfDay,\r\n      };\r\n    }\r\n\r\n    if (search) {\r\n      where.OR = [\r\n        { saleOrderNumber: { contains: search, mode: 'insensitive' } },\r\n        { product: { name: { contains: search, mode: 'insensitive' } } },\r\n        { customer: { name: { contains: search, mode: 'insensitive' } } },\r\n        { status: { contains: search, mode: 'insensitive' } },\r\n        { fgLocation: { contains: search, mode: 'insensitive' } },\r\n        { specialRemarks: { contains: search, mode: 'insensitive' } },\r\n      ];\r\n    }\r\n\r\n\r\n    const salesOrders = await this.prisma.salesOrder.findMany({\r\n      where,\r\n      include: {\r\n        product: true,\r\n        customer: true,\r\n      },\r\n      orderBy: {\r\n        deliveryDate: 'desc',\r\n      },\r\n    });\r\n\r\n    const fgData = await Promise.all(\r\n      salesOrders.map(async (order) => {\r\n        const materialData = await this.prisma.eRP_Material_Data.findFirst({\r\n          where: { saleOrderNumber: order.saleOrderNumber },\r\n          orderBy: { UpdatedDate: 'desc' },\r\n        });\r\n\r\n        return {\r\n          id: order.id,\r\n          deliveryDate: order.deliveryDate,\r\n          saleOrderNumber: order.saleOrderNumber,\r\n          product: order.product?.name,\r\n          customerName: order.customer?.name,\r\n          payment: order.paymentClearance,\r\n          status: order.status,\r\n          fgLocation: order.fgLocation,\r\n          specialRemarks: order.specialRemarks,\r\n          updatedBy: materialData?.UpdatedBy,\r\n          updatedDate: materialData?.UpdatedDate,\r\n        };\r\n      }),\r\n    );\r\n    return fgData;\r\n  }\r\n}"],"names":["FgDashboardService","getFgDashboardData","user","query","search","date","where","role","assignedUserId","userId","startOfDay","Date","setHours","endOfDay","deliveryDate","gte","lte","OR","saleOrderNumber","contains","mode","product","name","customer","status","fgLocation","specialRemarks","salesOrders","prisma","salesOrder","findMany","include","orderBy","fgData","Promise","all","map","order","materialData","eRP_Material_Data","findFirst","UpdatedDate","id","customerName","payment","paymentClearance","updatedBy","UpdatedBy","updatedDate"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBALc;+BACG;;;;;;;;;;AAIvB,IAAA,AAAMA,qBAAN,MAAMA;IAGX,MAAMC,mBAAmBC,IAAsC,EAAEC,KAAyC,EAAE;QAC1G,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE,GAAGF;QACzB,MAAMG,QAAqC,CAAC;QAE5C,IAAIJ,KAAKK,IAAI,KAAK,QAAQ;YACxBD,MAAME,cAAc,GAAGN,KAAKO,MAAM;QACpC;QAEA,IAAIJ,MAAM;YACR,MAAMK,aAAa,IAAIC,KAAKN;YAC5BK,WAAWE,QAAQ,CAAC,GAAG,GAAG,GAAG;YAC7B,MAAMC,WAAW,IAAIF,KAAKN;YAC1BQ,SAASD,QAAQ,CAAC,IAAI,IAAI,IAAI;YAC9BN,MAAMQ,YAAY,GAAG;gBACnBC,KAAKL;gBACLM,KAAKH;YACP;QACF;QAEA,IAAIT,QAAQ;YACVE,MAAMW,EAAE,GAAG;gBACT;oBAAEC,iBAAiB;wBAAEC,UAAUf;wBAAQgB,MAAM;oBAAc;gBAAE;gBAC7D;oBAAEC,SAAS;wBAAEC,MAAM;4BAAEH,UAAUf;4BAAQgB,MAAM;wBAAc;oBAAE;gBAAE;gBAC/D;oBAAEG,UAAU;wBAAED,MAAM;4BAAEH,UAAUf;4BAAQgB,MAAM;wBAAc;oBAAE;gBAAE;gBAChE;oBAAEI,QAAQ;wBAAEL,UAAUf;wBAAQgB,MAAM;oBAAc;gBAAE;gBACpD;oBAAEK,YAAY;wBAAEN,UAAUf;wBAAQgB,MAAM;oBAAc;gBAAE;gBACxD;oBAAEM,gBAAgB;wBAAEP,UAAUf;wBAAQgB,MAAM;oBAAc;gBAAE;aAC7D;QACH;QAGA,MAAMO,cAAc,MAAM,IAAI,CAACC,MAAM,CAACC,UAAU,CAACC,QAAQ,CAAC;YACxDxB;YACAyB,SAAS;gBACPV,SAAS;gBACTE,UAAU;YACZ;YACAS,SAAS;gBACPlB,cAAc;YAChB;QACF;QAEA,MAAMmB,SAAS,MAAMC,QAAQC,GAAG,CAC9BR,YAAYS,GAAG,CAAC,OAAOC;YACrB,MAAMC,eAAe,MAAM,IAAI,CAACV,MAAM,CAACW,iBAAiB,CAACC,SAAS,CAAC;gBACjElC,OAAO;oBAAEY,iBAAiBmB,MAAMnB,eAAe;gBAAC;gBAChDc,SAAS;oBAAES,aAAa;gBAAO;YACjC;YAEA,OAAO;gBACLC,IAAIL,MAAMK,EAAE;gBACZ5B,cAAcuB,MAAMvB,YAAY;gBAChCI,iBAAiBmB,MAAMnB,eAAe;gBACtCG,SAASgB,MAAMhB,OAAO,EAAEC;gBACxBqB,cAAcN,MAAMd,QAAQ,EAAED;gBAC9BsB,SAASP,MAAMQ,gBAAgB;gBAC/BrB,QAAQa,MAAMb,MAAM;gBACpBC,YAAYY,MAAMZ,UAAU;gBAC5BC,gBAAgBW,MAAMX,cAAc;gBACpCoB,WAAWR,cAAcS;gBACzBC,aAAaV,cAAcG;YAC7B;QACF;QAEF,OAAOR;IACT;IAnEA,YAAY,AAAiBL,MAAqB,CAAE;aAAvBA,SAAAA;IAAwB;AAoEvD"}