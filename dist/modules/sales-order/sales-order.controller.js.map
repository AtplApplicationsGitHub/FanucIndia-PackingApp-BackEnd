{"version":3,"sources":["../../../src/modules/sales-order/sales-order.controller.ts"],"sourcesContent":["import {\r\n  Controller,\r\n  Get,\r\n  Post,\r\n  Res,\r\n  Req,\r\n  UploadedFile,\r\n  UseGuards,\r\n  UseInterceptors,\r\n  HttpException,\r\n  HttpStatus,\r\n  BadRequestException,\r\n} from '@nestjs/common';\r\nimport { Response } from 'express';\r\nimport { SalesOrderService } from './sales-order.service';\r\nimport { FileInterceptor } from '@nestjs/platform-express';\r\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\r\nimport { Roles } from '../auth/roles.decorator';\r\nimport {\r\n  ApiTags,\r\n  ApiBearerAuth,\r\n  ApiOperation,\r\n  ApiResponse,\r\n  ApiConsumes,\r\n  ApiBody,\r\n} from '@nestjs/swagger';\r\nimport { AuthRequest } from '../auth/types/auth-request.type';\r\nimport { Buffer } from 'buffer';\r\n\r\n@ApiTags('Sales Order Bulk Import')\r\n@ApiBearerAuth()\r\n@UseGuards(JwtAuthGuard)\r\n@Controller('sales-orders')\r\nexport class SalesOrderController {\r\n  constructor(private readonly salesOrderService: SalesOrderService) {}\r\n\r\n  @Get('template')\r\n  @Roles('SALES')\r\n  @ApiOperation({ summary: 'Download sales order Excel template' })\r\n  @ApiResponse({ status: 200, description: 'Excel file downloaded' })\r\n  @ApiResponse({ status: 500, description: 'Failed to generate or send template' })\r\n  async downloadTemplate(@Res() res: Response) {\r\n    try {\r\n      await this.salesOrderService.generateBulkTemplate(res);\r\n    } catch (err: any) {\r\n      const status =\r\n        err instanceof HttpException ? err.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\r\n      throw new HttpException(\r\n        err.message || 'Failed to download template',\r\n        status,\r\n      );\r\n    }\r\n  }\r\n\r\n  @Post('import')\r\n  @Roles('SALES')\r\n  @UseInterceptors(FileInterceptor('file'))\r\n  @ApiOperation({ summary: 'Import bulk sales orders via Excel file' })\r\n  @ApiConsumes('multipart/form-data')\r\n  @ApiBody({\r\n    schema: {\r\n      type: 'object',\r\n      properties: {\r\n        file: { type: 'string', format: 'binary' },\r\n      },\r\n    },\r\n  })\r\n  @ApiResponse({ status: 201, description: 'Sales orders imported successfully' })\r\n  @ApiResponse({ status: 400, description: 'No file uploaded or invalid format' })\r\n  @ApiResponse({ status: 409, description: 'Duplicate orders detected' })\r\n  @ApiResponse({ status: 500, description: 'Failed to import sales orders' })\r\n  async bulkImport(\r\n    @UploadedFile() file: Express.Multer.File,\r\n    @Req() req: AuthRequest,\r\n  ) {\r\n    if (!file) {\r\n      throw new BadRequestException('No file uploaded');\r\n    }\r\n\r\n    const buf = Buffer.isBuffer(file.buffer)\r\n      ? file.buffer\r\n      : Buffer.from(file.buffer);\r\n\r\n    try {\r\n      return await this.salesOrderService.importBulkOrders(\r\n        buf,\r\n        req.user.userId,\r\n      );\r\n    } catch (err: any) {\r\n      if (err.status && err.response) {\r\n        throw err;\r\n      }\r\n      throw new HttpException(\r\n        err.message || 'Failed to import sales orders',\r\n        HttpStatus.INTERNAL_SERVER_ERROR,\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"names":["SalesOrderController","downloadTemplate","res","salesOrderService","generateBulkTemplate","err","status","HttpException","getStatus","HttpStatus","INTERNAL_SERVER_ERROR","message","bulkImport","file","req","BadRequestException","buf","Buffer","isBuffer","buffer","from","importBulkOrders","user","userId","response","summary","description","schema","type","properties","format"],"mappings":";;;;+BAiCaA;;;eAAAA;;;wBArBN;yBACkB;mCACS;iCACF;8BACH;gCACP;yBAQf;iCACqB;wBACL;;;;;;;;;;;;;;;AAMhB,IAAA,AAAMA,uBAAN,MAAMA;IAGX,MAKMC,iBAAiB,AAAOC,GAAa,EAAE;QAC3C,IAAI;YACF,MAAM,IAAI,CAACC,iBAAiB,CAACC,oBAAoB,CAACF;QACpD,EAAE,OAAOG,KAAU;YACjB,MAAMC,SACJD,eAAeE,qBAAa,GAAGF,IAAIG,SAAS,KAAKC,kBAAU,CAACC,qBAAqB;YACnF,MAAM,IAAIH,qBAAa,CACrBF,IAAIM,OAAO,IAAI,+BACfL;QAEJ;IACF;IAEA,MAiBMM,WACJ,AAAgBC,IAAyB,EACzC,AAAOC,GAAgB,EACvB;QACA,IAAI,CAACD,MAAM;YACT,MAAM,IAAIE,2BAAmB,CAAC;QAChC;QAEA,MAAMC,MAAMC,cAAM,CAACC,QAAQ,CAACL,KAAKM,MAAM,IACnCN,KAAKM,MAAM,GACXF,cAAM,CAACG,IAAI,CAACP,KAAKM,MAAM;QAE3B,IAAI;YACF,OAAO,MAAM,IAAI,CAAChB,iBAAiB,CAACkB,gBAAgB,CAClDL,KACAF,IAAIQ,IAAI,CAACC,MAAM;QAEnB,EAAE,OAAOlB,KAAU;YACjB,IAAIA,IAAIC,MAAM,IAAID,IAAImB,QAAQ,EAAE;gBAC9B,MAAMnB;YACR;YACA,MAAM,IAAIE,qBAAa,CACrBF,IAAIM,OAAO,IAAI,iCACfF,kBAAU,CAACC,qBAAqB;QAEpC;IACF;IA/DA,YAAY,AAAiBP,iBAAoC,CAAE;aAAtCA,oBAAAA;IAAuC;AAgEtE;;;;;QA5DkBsB,SAAS;;;QACVnB,QAAQ;QAAKoB,aAAa;;;QAC1BpB,QAAQ;QAAKoB,aAAa;;;;;;;;;;;;;;QAiBzBD,SAAS;;;;QAGvBE,QAAQ;YACNC,MAAM;YACNC,YAAY;gBACVhB,MAAM;oBAAEe,MAAM;oBAAUE,QAAQ;gBAAS;YAC3C;QACF;;;QAEaxB,QAAQ;QAAKoB,aAAa;;;QAC1BpB,QAAQ;QAAKoB,aAAa;;;QAC1BpB,QAAQ;QAAKoB,aAAa;;;QAC1BpB,QAAQ;QAAKoB,aAAa;;;;;;yDAET,yCAAA,OAAO,wCAAP,OAAO"}