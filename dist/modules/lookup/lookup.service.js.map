{"version":3,"sources":["../../../src/modules/lookup/lookup.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\r\nimport { PrismaService } from '../../prisma.service';\r\nimport { BadRequestException } from '@nestjs/common';\r\nimport { CreateProductDto } from './dto/createProductDto';\r\nimport { UpdateProductDto } from './dto/updateProductDto';\r\nimport { CreateTransporterDto } from './dto/createTransporterDto';\r\nimport { UpdateTransporterDto } from './dto/updateTransporterDto';\r\nimport { CreatePlantCodeDto } from './dto/createPlantCodeDto';\r\nimport { UpdatePlantCodeDto } from './dto/updatePlantCodeDto';\r\nimport { CreateSalesZoneDto } from './dto/createSalesZoneDto';\r\nimport { UpdateSalesZoneDto } from './dto/updateSalesZoneDto';\r\nimport { CreatePackConfigDto } from './dto/createPackConfigDto';\r\nimport { UpdatePackConfigDto } from './dto/updatePackConfigDto';\r\nimport { CreateCustomerDto } from './dto/createCustomerDto';\r\nimport { UpdateCustomerDto } from './dto/updateCustomerDto';\r\nimport { CreatePrinterDto } from './dto/createPrinterDto';\r\nimport { UpdatePrinterDto } from './dto/updatePrinterDto';\r\n\r\n@Injectable()\r\nexport class LookupService {\r\n  constructor(private prisma: PrismaService) {}\r\n\r\n  getProducts() {\r\n    return this.prisma.product.findMany({ orderBy: { name: 'asc' } });\r\n  }\r\n\r\n  createProduct(dto: CreateProductDto) {\r\n    return this.prisma.product.create({ data: dto });\r\n  }\r\n\r\n  updateProduct(id: number, dto: UpdateProductDto) {\r\n    return this.prisma.product.update({ where: { id }, data: dto });\r\n  }\r\n\r\n  async deleteProduct(id: number) {\r\n    try {\r\n      return await this.prisma.product.delete({ where: { id } });\r\n    } catch (error) {\r\n      console.error('Delete error:', error);\r\n      if (error.code === 'P2003') {\r\n        throw new BadRequestException(\r\n          'Cannot delete product: One or more orders depend on this product.'\r\n        );\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getTransporters() {\r\n    return this.prisma.transporter.findMany({ orderBy: { name: 'asc' } });\r\n  }\r\n\r\n  createTransporter(dto: CreateTransporterDto) {\r\n    return this.prisma.transporter.create({ data: dto });\r\n  }\r\n\r\n  updateTransporter(id: number, dto: UpdateTransporterDto) {\r\n    return this.prisma.transporter.update({ where: { id }, data: dto });\r\n  }\r\n\r\n  async deleteTransporter(id: number) {\r\n    try {\r\n      return await this.prisma.transporter.delete({ where: { id } });\r\n    } catch (error) {\r\n      if (error.code === 'P2003') {\r\n        throw new BadRequestException(\r\n          'Cannot delete transporter: One or more orders depend on this transporter.'\r\n        );\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getPlantCodes() {\r\n    return this.prisma.plantCode.findMany({ orderBy: { code: 'asc' } });\r\n  }\r\n\r\n  createPlantCode(dto: CreatePlantCodeDto) {\r\n    return this.prisma.plantCode.create({ data: dto });\r\n  }\r\n\r\n  updatePlantCode(id: number, dto: UpdatePlantCodeDto) {\r\n    return this.prisma.plantCode.update({ where: { id }, data: dto });\r\n  }\r\n\r\n  async deletePlantCode(id: number) {\r\n    try {\r\n      return await this.prisma.plantCode.delete({ where: { id } });\r\n    } catch (error) {\r\n      if (error.code === 'P2003') {\r\n        throw new BadRequestException(\r\n          'Cannot delete plant code: One or more orders depend on this plant code.'\r\n        );\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getSalesZones() {\r\n    return this.prisma.salesZone.findMany({ orderBy: { name: 'asc' } });\r\n  }\r\n\r\n  createSalesZone(dto: CreateSalesZoneDto) {\r\n    return this.prisma.salesZone.create({ data: dto });\r\n  }\r\n\r\n  updateSalesZone(id: number, dto: UpdateSalesZoneDto) {\r\n    return this.prisma.salesZone.update({ where: { id }, data: dto });\r\n  }\r\n\r\n  async deleteSalesZone(id: number) {\r\n    try {\r\n      return await this.prisma.salesZone.delete({ where: { id } });\r\n    } catch (error) {\r\n      if (error.code === 'P2003') {\r\n        throw new BadRequestException(\r\n          'Cannot delete sales zone: One or more orders depend on this sales zone.'\r\n        );\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getPackConfigs() {\r\n    return this.prisma.packConfig.findMany({ orderBy: { configName: 'asc' } });\r\n  }\r\n\r\n  createPackConfig(dto: CreatePackConfigDto) {\r\n    return this.prisma.packConfig.create({ data: dto });\r\n  }\r\n\r\n  updatePackConfig(id: number, dto: UpdatePackConfigDto) {\r\n    return this.prisma.packConfig.update({ where: { id }, data: dto });\r\n  }\r\n\r\n  async deletePackConfig(id: number) {\r\n    try {\r\n      return await this.prisma.packConfig.delete({ where: { id } });\r\n    } catch (error) {\r\n      if (error.code === 'P2003') {\r\n        throw new BadRequestException(\r\n          'Cannot delete packing configuration: One or more orders depend on this value.'\r\n        );\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getCustomers() {\r\n    return this.prisma.customer.findMany({ orderBy: { name: 'asc' } });\r\n  }\r\n\r\n  createCustomer(dto: CreateCustomerDto) {\r\n    return this.prisma.customer.create({ data: dto });\r\n  }\r\n\r\n  updateCustomer(id: number, dto: UpdateCustomerDto) {\r\n    return this.prisma.customer.update({ where: { id }, data: dto });\r\n  }\r\n\r\n  async deleteCustomer(id: number) {\r\n    try {\r\n      return await this.prisma.customer.delete({ where: { id } });\r\n    } catch (error) {\r\n      if (error.code === 'P2003') {\r\n        throw new BadRequestException(\r\n          'Cannot delete customer: One or more orders depend on this customer.'\r\n        );\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getPrinters() {\r\n    return this.prisma.printer.findMany({ orderBy: { name: 'asc' } });\r\n  }\r\n\r\n  createPrinter(dto: CreatePrinterDto) {\r\n    return this.prisma.printer.create({ data: dto });\r\n  }\r\n\r\n  updatePrinter(id: number, dto: UpdatePrinterDto) {\r\n    return this.prisma.printer.update({ where: { id }, data: dto });\r\n  }\r\n\r\n  async deletePrinter(id: number) {\r\n    try {\r\n      return await this.prisma.printer.delete({ where: { id } });\r\n    } catch (error) {\r\n      if (error.code === 'P2003') {\r\n        throw new BadRequestException(\r\n          'Cannot delete printer: One or more entities depend on this printer.'\r\n        );\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"],"names":["LookupService","getProducts","prisma","product","findMany","orderBy","name","createProduct","dto","create","data","updateProduct","id","update","where","deleteProduct","delete","error","console","code","BadRequestException","getTransporters","transporter","createTransporter","updateTransporter","deleteTransporter","getPlantCodes","plantCode","createPlantCode","updatePlantCode","deletePlantCode","getSalesZones","salesZone","createSalesZone","updateSalesZone","deleteSalesZone","getPackConfigs","packConfig","configName","createPackConfig","updatePackConfig","deletePackConfig","getCustomers","customer","createCustomer","updateCustomer","deleteCustomer","getPrinters","printer","createPrinter","updatePrinter","deletePrinter"],"mappings":"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"}