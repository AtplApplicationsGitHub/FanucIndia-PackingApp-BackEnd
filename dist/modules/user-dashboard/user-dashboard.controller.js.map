{"version":3,"sources":["../../../src/modules/user-dashboard/user-dashboard.controller.ts"],"sourcesContent":["import { Controller, Get, Param, ParseIntPipe, Req, UseGuards, NotFoundException } from '@nestjs/common';\r\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\r\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\r\nimport { Roles } from '../auth/roles.decorator';\r\nimport { AuthRequest } from '../auth/types/auth-request.type';\r\nimport { UserDashboardService } from './user-dashboard.service';\r\n\r\n@ApiTags('User Dashboard')\r\n@ApiBearerAuth()\r\n@UseGuards(JwtAuthGuard)\r\n@Controller('user-dashboard')\r\nexport class UserDashboardController {\r\n  constructor(private readonly userDashboardService: UserDashboardService) {}\r\n\r\n  @Get('orders')\r\n  @Roles('USER')\r\n  @ApiOperation({ summary: \"Get all sales orders assigned to the logged-in user\" })\r\n  @ApiResponse({ status: 200, description: 'Assigned orders returned successfully' })\r\n  getAssignedOrders(@Req() req: AuthRequest) {\r\n    const userId = req.user.userId;\r\n    return this.userDashboardService.findAssignedOrders(userId);\r\n  }\r\n\r\n  @Get('orders/:id')\r\n  @Roles('USER', 'ADMIN')\r\n  @ApiOperation({ summary: \"Get details for a specific sales order\" })\r\n  @ApiResponse({ status: 200, description: 'Sales order details returned' })\r\n  @ApiResponse({ status: 404, description: 'Order not found or access denied' })\r\n  async getOrderDetails(@Param('id', ParseIntPipe) id: number, @Req() req: AuthRequest) {\r\n    const userId = req.user.userId;\r\n    const userRole = req.user.role;\r\n\r\n    const order = await this.userDashboardService.findOrderById(id, userId, userRole);\r\n\r\n    if (!order) {\r\n      throw new NotFoundException('Sales order not found or you do not have permission to view it.');\r\n    }\r\n    return order;\r\n  }\r\n}\r\n"],"names":["UserDashboardController","getAssignedOrders","req","userId","user","userDashboardService","findAssignedOrders","getOrderDetails","id","userRole","role","order","findOrderById","NotFoundException","summary","status","description"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBAX2E;yBACtB;8BACrC;gCACP;iCACM;sCACS;;;;;;;;;;;;;;;AAM9B,IAAA,AAAMA,0BAAN,MAAMA;IAOXC,kBAAkB,AAAOC,GAAgB,EAAE;QACzC,MAAMC,SAASD,IAAIE,IAAI,CAACD,MAAM;QAC9B,OAAO,IAAI,CAACE,oBAAoB,CAACC,kBAAkB,CAACH;IACtD;IAEA,MAKMI,gBAAgB,AAA2BC,EAAU,EAAE,AAAON,GAAgB,EAAE;QACpF,MAAMC,SAASD,IAAIE,IAAI,CAACD,MAAM;QAC9B,MAAMM,WAAWP,IAAIE,IAAI,CAACM,IAAI;QAE9B,MAAMC,QAAQ,MAAM,IAAI,CAACN,oBAAoB,CAACO,aAAa,CAACJ,IAAIL,QAAQM;QAExE,IAAI,CAACE,OAAO;YACV,MAAM,IAAIE,yBAAiB,CAAC;QAC9B;QACA,OAAOF;IACT;IA1BA,YAAY,AAAiBN,oBAA0C,CAAE;aAA5CA,uBAAAA;IAA6C;AA2B5E;;;;;QAvBkBS,SAAS;;;QACVC,QAAQ;QAAKC,aAAa;;;;;;;;;;;;;QAQzBF,SAAS;;;QACVC,QAAQ;QAAKC,aAAa;;;QAC1BD,QAAQ;QAAKC,aAAa"}