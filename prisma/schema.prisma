generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  password    String
  role        String       @default("sales")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  salesOrders SalesOrder[]
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  code        String?
  salesOrders SalesOrder[]
}

model Transporter {
  id          Int          @id @default(autoincrement())
  name        String
  salesOrders SalesOrder[]
}

model PlantCode {
  id          Int          @id @default(autoincrement())
  code        String
  description String?
  salesOrders SalesOrder[]
}

model SalesZone {
  id          Int          @id @default(autoincrement())
  name        String
  salesOrders SalesOrder[]
}

model PackConfig {
  id          Int          @id @default(autoincrement())
  configName  String
  salesOrders SalesOrder[]
}

model Terminal {
  id          Int          @id @default(autoincrement())
  name        String
  salesOrders SalesOrder[]
}

model Customer {
  id           Int                 @id @default(autoincrement())
  name         String
  address      String
  erpMaterials ERP_Material_Data[] @relation("Customer_ERP_Material_Data")
  salesOrders  SalesOrder[]
}

model Printer {
  id          Int          @id @default(autoincrement())
  name        String
  salesOrders SalesOrder[]
}

model SalesOrder {
  id                 Int                 @id @default(autoincrement())
  userId             Int
  productId          Int
  saleOrderNumber    String              @unique @db.NVarChar(500)
  outboundDelivery   String              @unique @db.NVarChar(500)
  transferOrder      String              @unique @db.NVarChar(500)
  deliveryDate       DateTime
  transporterId      Int
  plantCodeId        Int
  paymentClearance   Boolean
  salesZoneId        Int
  packConfigId       Int
  terminalId         Int?
  customerId         Int?
  printerId          Int?
  specialRemarks     String?
  status             String              @default("R105")
  priority           Int?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  materialByOBD      ERP_Material_Data[] @relation("SO_By_OBD")
  materialByNumber   ERP_Material_Data[] @relation("SO_By_Number")
  materialFilesByNumber ERP_Material_File[] @relation("SO_File_By_Number")
  materialByTransfer ERP_Material_Data[] @relation("SO_By_Transfer")
  customer           Customer?           @relation(fields: [customerId], references: [id])
  packConfig         PackConfig          @relation(fields: [packConfigId], references: [id])
  plantCode          PlantCode           @relation(fields: [plantCodeId], references: [id])
  printer            Printer?            @relation(fields: [printerId], references: [id])
  product            Product             @relation(fields: [productId], references: [id])
  salesZone          SalesZone           @relation(fields: [salesZoneId], references: [id])
  terminal           Terminal?           @relation(fields: [terminalId], references: [id])
  transporter        Transporter         @relation(fields: [transporterId], references: [id])
  user               User                @relation(fields: [userId], references: [id])
}

model ERP_Material_Data {
  ID                   BigInt      @id(map: "PK_ERP_Material_Data") @default(autoincrement())
  saleOrderNumber      String?     @db.NVarChar(500)
  customerId           Int?
  transferOrder        String?     @db.NVarChar(500)
  FG_OBD               String?     @db.NVarChar(500)
  Machine_Model        String?
  CNC_Serial_No        String?     @db.NVarChar(100)
  Material_Code        String
  Material_Description String
  Batch_No             String      @db.NVarChar(100)
  SO_Donor_Batch       String      @db.NVarChar(100)
  Cert_No              String      @db.NVarChar(100)
  Bin_No               String      @db.NVarChar(100)
  A_D_F                String      @db.NVarChar(100)
  Required_Qty         Int
  Issue_stage          Int         @default(0)
  Packing_stage        Int         @default(0)
  Status               String?     @db.NVarChar(100)
  UpdatedDate          DateTime?   @db.DateTime
  UpdatedBy            String?     @db.NVarChar(50)
  customer             Customer?   @relation("Customer_ERP_Material_Data", fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  salesOrderByOBD      SalesOrder? @relation("SO_By_OBD", fields: [FG_OBD], references: [outboundDelivery], onDelete: NoAction, onUpdate: NoAction)
  salesOrderByNumber   SalesOrder? @relation("SO_By_Number", fields: [saleOrderNumber], references: [saleOrderNumber], onDelete: NoAction, onUpdate: NoAction)
  salesOrderByTransfer SalesOrder? @relation("SO_By_Transfer", fields: [transferOrder], references: [transferOrder], onDelete: NoAction, onUpdate: NoAction)
}

model ERPMaterialLog {
  id                Int      @id @default(autoincrement())
  dateTime          DateTime @map("date_time")
  fileName          String   @map("file_name") @db.NVarChar(255)
  exceptionStatus   String?  @map("exception/status") @db.NVarChar(255)
  soNo              String   @map("SO_NO") @db.NVarChar(50)
  noOfFilesExecuted Int      @map("no_of_files_executed")

  @@map("ERP_Material_Log")
}

model ERP_Material_File {
  ID              Int      @id(map: "PK_ERP_Material_File") @default(autoincrement())
  saleOrderNumber String?  @db.NVarChar(500)
  fileName        String   @db.NVarChar(500)
  description     String?  @db.NVarChar(2000)
  sftpPath         String    @db.NVarChar(1000)
  sftpDir          String    @db.NVarChar(1000)
  fileSizeBytes    BigInt
  mimeType         String?   @db.NVarChar(255)
  checksumSha256   String?   @db.NVarChar(64)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  @@unique([sftpPath])
  @@index([saleOrderNumber, fileName])
  salesOrderByNumber SalesOrder? @relation("SO_File_By_Number", fields: [saleOrderNumber], references: [saleOrderNumber], onDelete: NoAction, onUpdate: NoAction)
}
