generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  name           String
  email          String       @unique
  password       String
  role           String       @default("SALES")
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  salesOrders    SalesOrder[] @relation("CreatedOrders")
  assignedOrders SalesOrder[] @relation("AssignedOrders")
  dispatches     Dispatch[]
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  code        String?
  salesOrders SalesOrder[]
}

model Transporter {
  id          Int          @id @default(autoincrement())
  name        String
  salesOrders SalesOrder[]
  dispatches  Dispatch[]
}

model PlantCode {
  id          Int          @id @default(autoincrement())
  code        String
  description String?
  salesOrders SalesOrder[]
}

model SalesZone {
  id          Int          @id @default(autoincrement())
  name        String
  salesOrders SalesOrder[]
}

model PackConfig {
  id          Int          @id @default(autoincrement())
  configName  String
  salesOrders SalesOrder[]
}

model Customer {
  id           Int                 @id @default(autoincrement())
  name         String
  address      String
  erpMaterials ERP_Material_Data[] @relation("Customer_ERP_Material_Data")
  salesOrders  SalesOrder[]
  dispatches   Dispatch[]
}

model Printer {
  id          Int          @id @default(autoincrement())
  name        String
  salesOrders SalesOrder[]
}

model SalesOrder {
  id               Int                 @id @default(autoincrement())
  userId           Int
  productId        Int
  saleOrderNumber  String              @unique @db.VarChar(500)
  outboundDelivery String              @unique @db.VarChar(500)
  transferOrder    String              @unique @db.VarChar(500)
  deliveryDate     DateTime
  transporterId    Int
  plantCodeId      Int
  paymentClearance Boolean
  salesZoneId      Int
  packConfigId     Int
  assignedUserId   Int?
  customerId       Int?
  printerId        Int?
  specialRemarks   String?
  fgLocation       String?
  status           String              @default("R105")
  priority         Int?
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  materialData     ERP_Material_Data[]
  materialFilesByNumber ERP_Material_File[] @relation("SO_File_By_Number")
  customer         Customer?           @relation(fields: [customerId], references: [id])
  packConfig       PackConfig          @relation(fields: [packConfigId], references: [id])
  plantCode        PlantCode           @relation(fields: [plantCodeId], references: [id])
  printer          Printer?            @relation(fields: [printerId], references: [id])
  product          Product             @relation(fields: [productId], references: [id])
  salesZone        SalesZone           @relation(fields: [salesZoneId], references: [id])
  assignedUser     User?               @relation("AssignedOrders", fields: [assignedUserId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transporter      Transporter         @relation(fields: [transporterId], references: [id])
  user             User                @relation("CreatedOrders", fields: [userId], references: [id])
  Dispatch_SO      Dispatch_SO[]
}

model ERP_Material_Data {
  ID                   BigInt      @id(map: "PK_ERP_Material_Data") @default(autoincrement())
  saleOrderNumber      String?     @db.VarChar(500)
  customerId           Int?
  transferOrder        String?     @db.VarChar(500)
  FG_OBD               String?     @db.VarChar(500)
  Machine_Model        String?
  CNC_Serial_No        String?     @db.VarChar(100)
  Material_Code        String
  Material_Description String
  Batch_No             String      @db.VarChar(100)
  SO_Donor_Batch       String      @db.VarChar(100)
  Cert_No              String      @db.VarChar(100)
  Bin_No               String      @db.VarChar(100)
  A_D_F                String      @db.VarChar(100)
  Required_Qty         Int
  Issue_stage          Int         @default(0)
  Packing_stage        Int         @default(0)
  Status               String?     @db.VarChar(100)
  UpdatedDate          DateTime?   @db.Timestamp(3)
  UpdatedBy            String?     @db.VarChar(50)
  customer             Customer?   @relation("Customer_ERP_Material_Data", fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  salesOrder           SalesOrder? @relation(fields: [saleOrderNumber], references: [saleOrderNumber], onDelete: NoAction, onUpdate: NoAction)
}

model ERPMaterialLog {
  id                Int      @id @default(autoincrement())
  dateTime          DateTime @map("date_time")
  fileName          String   @map("file_name") @db.VarChar(255)
  exceptionStatus   String?  @map("exception/status") @db.VarChar(255)
  soNo              String   @map("SO_NO") @db.VarChar(50)
  noOfFilesExecuted Int      @map("no_of_files_executed")

  @@map("ERP_Material_Log")
}

model ERP_Material_File {
  ID                 Int         @id(map: "PK_ERP_Material_File") @default(autoincrement())
  saleOrderNumber    String?     @db.VarChar(500)
  fileName           String      @db.VarChar(500)
  description        String?     @db.VarChar(2000)
  sftpPath           String      @db.VarChar(1000)
  sftpDir            String      @db.VarChar(1000)
  fileSizeBytes      BigInt
  mimeType           String?     @db.VarChar(255)
  checksumSha256     String?     @db.VarChar(64)
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  
  @@unique([sftpPath])
  @@index([saleOrderNumber, fileName])
  salesOrderByNumber SalesOrder? @relation("SO_File_By_Number", fields: [saleOrderNumber], references: [saleOrderNumber], onDelete: NoAction, onUpdate: NoAction)
}

model Dispatch {
  id            Int           @id @default(autoincrement())
  customerId    Int
  address       String
  transporterId Int?
  vehicleNumber String
  attachments   Json?
  createdBy     Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  customer      Customer      @relation(fields: [customerId], references: [id])
  transporter   Transporter?  @relation(fields: [transporterId], references: [id])
  user          User          @relation(fields: [createdBy], references: [id])
  dispatchSOs   Dispatch_SO[]
}

model Dispatch_SO {
id              Int        @id @default(autoincrement())
dispatchId      Int
saleOrderNumber String     @db.VarChar(500)
createdAt       DateTime   @default(now())
dispatch        Dispatch   @relation(fields: [dispatchId], references: [id], onDelete: Cascade)
salesOrder      SalesOrder @relation(fields: [saleOrderNumber], references: [saleOrderNumber])

@@unique([dispatchId, saleOrderNumber])
}